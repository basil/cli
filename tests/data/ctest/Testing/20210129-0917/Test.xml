<?xml version="1.0"?>
<testsuites>
  <testsuite name="CTest" tests="4" time="0" failures="1" errors="0" skipped="0">
    <testcase classname="projectroot" name="TestScreenshotGallery" time="0.0222358">
      <system-out>  error: cannot open /Users/ninjin/src/github.com/launchable/rocket-car-ctest/build/test/TestEditor/*.png for reading
  error: cannot open /Users/ninjin/src/github.com/launchable/rocket-car-ctest/build/test/TestExamples/*.png for reading
mv: rename /Users/ninjin/src/github.com/launchable/rocket-car-ctest/build/test/TestEditor/*-or8.png to test/TestEditor/*.png: No such file or directory
mv: rename /Users/ninjin/src/github.com/launchable/rocket-car-ctest/build/test/TestExamples/*-or8.png to test/TestExamples/*.png: No such file or directory
</system-out>
    </testcase>
    <testcase classname="projectroot.Users.ninjin.src.githubcom.launchable.rocket-car-ctest.test.TestUtilities" name="TestUtilities" time="4.10178">
      <system-out>********* Start testing of TestUtilities *********
Config: Using QtTest library 5.11.3, Qt 5.11.3 (x86_64-little_endian-lp64 shared (dynamic) release build; by Clang 8.0.0 (clang-800.0.42.1) (Apple))
PASS   : TestUtilities::initTestCase()
PASS   : TestUtilities::testSplitPath(Absolute path.)
PASS   : TestUtilities::testSplitPath(File.)
PASS   : TestUtilities::testSplitPath(Directory.)
PASS   : TestUtilities::testSplitPath(Directory and file.)
PASS   : TestUtilities::testSplitPath(Directory and file ending in '.'.)
PASS   : TestUtilities::testSplitPath(Hidden file. The file name ends up getting parsed as an extension, and that's OK.)
PASS   : TestUtilities::testSplitPath(Relative path with '..'.)
PASS   : TestUtilities::testCanonicalPath(Empty path.)
PASS   : TestUtilities::testCanonicalPath(Root directory.)
PASS   : TestUtilities::testCanonicalPath(Absolute path, already canonical.)
PASS   : TestUtilities::testCanonicalPath(Relative path, already canonical.)
PASS   : Tes...
The rest of the test output was removed since it exceeds the threshold of 1024 bytes.
</system-out>
    </testcase>
    <testcase classname="projectroot.Users.ninjin.src.githubcom.launchable.rocket-car-ctest.test.TestDirectedAcyclicGraph" name="TestDirectedAcyclicGraph" time="0.0689421">
      <system-out>********* Start testing of TestDirectedAcyclicGraph *********
Config: Using QtTest library 5.11.3, Qt 5.11.3 (x86_64-little_endian-lp64 shared (dynamic) release build; by Clang 8.0.0 (clang-800.0.42.1) (Apple))
PASS   : TestDirectedAcyclicGraph::initTestCase()
PASS   : TestDirectedAcyclicGraph::testReachableVertices(no edges)
PASS   : TestDirectedAcyclicGraph::testReachableVertices(tree lower leaf)
PASS   : TestDirectedAcyclicGraph::testReachableVertices(tree upper leaf)
PASS   : TestDirectedAcyclicGraph::testReachableVertices(tree middle)
PASS   : TestDirectedAcyclicGraph::testReachableVertices(tree root)
PASS   : TestDirectedAcyclicGraph::testReachableVertices(bypass leaf)
PASS   : TestDirectedAcyclicGraph::testReachableVertices(bypass middle)
PASS   : TestDirectedAcyclicGraph::testReachableVertices(bypass root)
PASS   : TestDirectedAcyclicGraph::testReachableVertices(diamond leaf)
PASS   : TestDirectedAcyclicGraph::testReachableVertices(diamond middle)
PASS   : TestDi...
The rest of the test output was removed since it exceeds the threshold of 1024 bytes.
</system-out>
    </testcase>
    <testcase classname="projectroot.Users.ninjin.src.githubcom.launchable.rocket-car-ctest.test.TestTypes" name="TestTime" time="1.08209">
      <failure>********* Start testing of TestTime *********
Config: Using QtTest library 5.11.3, Qt 5.11.3 (x86_64-little_endian-lp64 shared (dynamic) release build; by Clang 8.0.0 (clang-800.0.42.1) (Apple))
PASS   : TestTime::initTestCase()
PASS   : TestTime::testCurrent()
PASS   : TestTime::testComponents(NaN)
PASS   : TestTime::testComponents(Transatlantic telegraph)
PASS   : TestTime::testComponents(Phone call)
PASS   : TestTime::testComponents(Unix epoch)
PASS   : TestTime::testComponents(62 seconds before Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(61.5 seconds before Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(2 seconds before Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(1 second before Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(RocketCar 0.5 release)
PASS   : TestTime::testComponents(RocketCar 1.0 release)
PASS   : TestTime::testComponents(second rollover: 19:00:59.00)
PASS   : TestTime::testComponents(second rollover: 19:00:59.99)
PASS   : TestTime::testComponents(second rollover: 19:01:00.00)
PASS   : TestTime::testComponents(second rollover: 20:00:59.00)
PASS   : TestTime::testComponents(second rollover: 20:00:59.99)
PASS   : TestTime::testComponents(second rollover: 20:01:00.00)
PASS   : TestTime::testWeekNumber(1998W01-mon)
PASS   : TestTime::testWeekNumber(1998W01-wed)
PASS   : TestTime::testWeekNumber(1998W01-thu)
PASS   : TestTime::testWeekNumber(1998W01-sun)
PASS   : TestTime::testWeekNumber(1998W02-mon)
PASS   : TestTime::testWeekNumber(1998W53-mon)
PASS   : TestTime::testWeekNumber(1998W53-thu)
PASS   : TestTime::testWeekNumber(1998W53-fri)
PASS   : TestTime::testWeekNumber(1998W53-sun)
PASS   : TestTime::testWeekNumber(1999W01-mon)
PASS   : TestTime::testWeekNumber(1999W52-mon)
PASS   : TestTime::testWeekNumber(1999W52-fri)
PASS   : TestTime::testWeekNumber(1999W52-sat)
PASS   : TestTime::testWeekNumber(1999W52-sun)
PASS   : TestTime::testWeekNumber(2000W01-mon)
PASS   : TestTime::testAreEqualWithinTolerance(no times)
PASS   : TestTime::testAreEqualWithinTolerance(one time)
PASS   : TestTime::testAreEqualWithinTolerance(time vs. NaN)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 0)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 second)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 minute)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 quarter-hour)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 half-hour)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 hour)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1/24 day)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1/23 day)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 5 quarter-hours)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 3 half-hours)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 day)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 weekSunday)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 weekMonday)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 month)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 quarter)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 year)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 decade)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 century)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 millennium)
PASS   : TestTime::testAreEqualWithinTolerance(three times, tolerance 0)
PASS   : TestTime::testAreEqualWithinTolerance(three times, tolerance 1 second)
PASS   : TestTime::testAreEqualWithinTolerance(three times, tolerance 1 hour)
PASS   : TestTime::testAreEqualWithinTolerance(three times, tolerance 2 hours)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(no times)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(one time)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(time vs. NaN)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 0)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 second)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 minute)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 quarter-hour)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 half-hour)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 hour)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 2 hours)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 6 quarter-hours)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 3 half-hours)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(three times, tolerance 0)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(three times, tolerance 0.5 seconds)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(three times, tolerance 1 second)
PASS   : TestTime::testIsTimeOfDayLessThan(same time)
PASS   : TestTime::testIsTimeOfDayLessThan(within day, less)
PASS   : TestTime::testIsTimeOfDayLessThan(within day, not less)
PASS   : TestTime::testIsTimeOfDayLessThan(span midnight, less)
PASS   : TestTime::testIsTimeOfDayLessThan(span midnight, not less)
PASS   : TestTime::testIsTimeOfDayLessThan(span old midnight, less)
PASS   : TestTime::testIsTimeOfDayLessThan(span old midnight, not less)
PASS   : TestTime::testIsTimeOfDayLessThan(span 06:00, less)
PASS   : TestTime::testIsTimeOfDayLessThan(span 06:00, not less)
PASS   : TestTime::testRelativeTime(zero)
PASS   : TestTime::testRelativeTime(1 second)
PASS   : TestTime::testRelativeTime(-1 second)
PASS   : TestTime::testRelativeTime(1.5 seconds)
PASS   : TestTime::testRelativeTime(-1.5 seconds)
PASS   : TestTime::testRelativeTime(20 minutes)
PASS   : TestTime::testRelativeTime(1 hour)
PASS   : TestTime::testRelativeTime(1 day)
PASS   : TestTime::testRelativeTime(1 month)
PASS   : TestTime::testRelativeTime(1 year)
PASS   : TestTime::testRelativeTime(Between RocketCar 0.5 and 1.0)
PASS   : TestTime::testRelativeTime(Between RocketCar 1.0 and 0.5)
FAIL!  : TestTime::testRFC822(UTC) Compared doubles are not the same (fuzzy compare)
   Actual   (actualTime)  : nan
   Expected (expectedTime): 4.66521e+08
   Loc: [/Users/ninjin/src/github.com/launchable/rocket-car-ctest/test/TestTypes/TestTime.cc(427)]
FAIL!  : TestTime::testRFC822(-4) Compared doubles are not the same (fuzzy compare)
   Actual   (actualTime)  : nan
   Expected (expectedTime): 4.66685e+08
   Loc: [/Users/ninjin/src/github.com/launchable/rocket-car-ctest/test/TestTypes/TestTime.cc(427)]
PASS   : TestTime::testRound(Millennium)
PASS   : TestTime::testRound(Century)
PASS   : TestTime::testRound(Decade)
PASS   : TestTime::testRound(Year)
PASS   : TestTime::testRound(Quarter)
PASS   : TestTime::testRound(Month)
PASS   : TestTime::testRound(WeekSunday)
PASS   : TestTime::testRound(WeekMonday)
PASS   : TestTime::testRound(Day)
PASS   : TestTime::testRound(Hour)
PASS   : TestTime::testRound(HalfHour)
PASS   : TestTime::testRound(QuarterHour)
PASS   : TestTime::testRound(Minute)
PASS   : TestTime::testRound(Second)
[NON-XML-CHAR-0x1B][38;5;201m# pid=40145  t=  1.0244s                   Time.c:656            Time_formatWithLocale_block()  macOS Locale: en_US[NON-XML-CHAR-0x1B][0m
[NON-XML-CHAR-0x1B][38;5;201m# pid=40145  t=  1.0246s                   Time.c:657            Time_formatWithLocale_block()      C Locale: en_US[NON-XML-CHAR-0x1B][0m
PASS   : TestTime::testFormat(datetime-sortable)
PASS   : TestTime::testFormat(datetime-short-12)
PASS   : TestTime::testFormat(datetime-short-24)
PASS   : TestTime::testFormat(datetime-medium-12)
PASS   : TestTime::testFormat(datetime-medium-24)
PASS   : TestTime::testFormat(datetime-long-12)
PASS   : TestTime::testFormat(datetime-long-24)
PASS   : TestTime::testFormat(date-short)
PASS   : TestTime::testFormat(date-medium)
PASS   : TestTime::testFormat(date-long)
PASS   : TestTime::testFormat(time-12)
PASS   : TestTime::testFormat(time-24)
PASS   : TestTime::cleanupTestCase()
Totals: 123 passed, 2 failed, 0 skipped, 0 blacklisted, 1021ms
********* Finished testing of TestTime *********
</failure>
      <system-out>********* Start testing of TestTime *********
Config: Using QtTest library 5.11.3, Qt 5.11.3 (x86_64-little_endian-lp64 shared (dynamic) release build; by Clang 8.0.0 (clang-800.0.42.1) (Apple))
PASS   : TestTime::initTestCase()
PASS   : TestTime::testCurrent()
PASS   : TestTime::testComponents(NaN)
PASS   : TestTime::testComponents(Transatlantic telegraph)
PASS   : TestTime::testComponents(Phone call)
PASS   : TestTime::testComponents(Unix epoch)
PASS   : TestTime::testComponents(62 seconds before Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(61.5 seconds before Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(2 seconds before Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(1 second before Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(Mac (and RocketCar) epoch)
PASS   : TestTime::testComponents(RocketCar 0.5 release)
PASS   : TestTime::testComponents(RocketCar 1.0 release)
PASS   : TestTime::testComponents(second rollover: 19:00:59.00)
PASS   : TestTime::testComponents(second rollover: 19:00:59.99)
PASS   : TestTime::testComponents(second rollover: 19:01:00.00)
PASS   : TestTime::testComponents(second rollover: 20:00:59.00)
PASS   : TestTime::testComponents(second rollover: 20:00:59.99)
PASS   : TestTime::testComponents(second rollover: 20:01:00.00)
PASS   : TestTime::testWeekNumber(1998W01-mon)
PASS   : TestTime::testWeekNumber(1998W01-wed)
PASS   : TestTime::testWeekNumber(1998W01-thu)
PASS   : TestTime::testWeekNumber(1998W01-sun)
PASS   : TestTime::testWeekNumber(1998W02-mon)
PASS   : TestTime::testWeekNumber(1998W53-mon)
PASS   : TestTime::testWeekNumber(1998W53-thu)
PASS   : TestTime::testWeekNumber(1998W53-fri)
PASS   : TestTime::testWeekNumber(1998W53-sun)
PASS   : TestTime::testWeekNumber(1999W01-mon)
PASS   : TestTime::testWeekNumber(1999W52-mon)
PASS   : TestTime::testWeekNumber(1999W52-fri)
PASS   : TestTime::testWeekNumber(1999W52-sat)
PASS   : TestTime::testWeekNumber(1999W52-sun)
PASS   : TestTime::testWeekNumber(2000W01-mon)
PASS   : TestTime::testAreEqualWithinTolerance(no times)
PASS   : TestTime::testAreEqualWithinTolerance(one time)
PASS   : TestTime::testAreEqualWithinTolerance(time vs. NaN)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 0)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 second)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 minute)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 quarter-hour)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 half-hour)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 hour)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1/24 day)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1/23 day)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 5 quarter-hours)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 3 half-hours)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 day)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 weekSunday)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 weekMonday)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 month)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 quarter)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 year)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 decade)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 century)
PASS   : TestTime::testAreEqualWithinTolerance(61min, tolerance 1 millennium)
PASS   : TestTime::testAreEqualWithinTolerance(three times, tolerance 0)
PASS   : TestTime::testAreEqualWithinTolerance(three times, tolerance 1 second)
PASS   : TestTime::testAreEqualWithinTolerance(three times, tolerance 1 hour)
PASS   : TestTime::testAreEqualWithinTolerance(three times, tolerance 2 hours)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(no times)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(one time)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(time vs. NaN)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 0)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 second)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 minute)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 quarter-hour)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 half-hour)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 1 hour)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 2 hours)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 6 quarter-hours)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(two times, tolerance 3 half-hours)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(three times, tolerance 0)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(three times, tolerance 0.5 seconds)
PASS   : TestTime::testAreTimesOfDayEqualWithinTolerance(three times, tolerance 1 second)
PASS   : TestTime::testIsTimeOfDayLessThan(same time)
PASS   : TestTime::testIsTimeOfDayLessThan(within day, less)
PASS   : TestTime::testIsTimeOfDayLessThan(within day, not less)
PASS   : TestTime::testIsTimeOfDayLessThan(span midnight, less)
PASS   : TestTime::testIsTimeOfDayLessThan(span midnight, not less)
PASS   : TestTime::testIsTimeOfDayLessThan(span old midnight, less)
PASS   : TestTime::testIsTimeOfDayLessThan(span old midnight, not less)
PASS   : TestTime::testIsTimeOfDayLessThan(span 06:00, less)
PASS   : TestTime::testIsTimeOfDayLessThan(span 06:00, not less)
PASS   : TestTime::testRelativeTime(zero)
PASS   : TestTime::testRelativeTime(1 second)
PASS   : TestTime::testRelativeTime(-1 second)
PASS   : TestTime::testRelativeTime(1.5 seconds)
PASS   : TestTime::testRelativeTime(-1.5 seconds)
PASS   : TestTime::testRelativeTime(20 minutes)
PASS   : TestTime::testRelativeTime(1 hour)
PASS   : TestTime::testRelativeTime(1 day)
PASS   : TestTime::testRelativeTime(1 month)
PASS   : TestTime::testRelativeTime(1 year)
PASS   : TestTime::testRelativeTime(Between RocketCar 0.5 and 1.0)
PASS   : TestTime::testRelativeTime(Between RocketCar 1.0 and 0.5)
FAIL!  : TestTime::testRFC822(UTC) Compared doubles are not the same (fuzzy compare)
   Actual   (actualTime)  : nan
   Expected (expectedTime): 4.66521e+08
   Loc: [/Users/ninjin/src/github.com/launchable/rocket-car-ctest/test/TestTypes/TestTime.cc(427)]
FAIL!  : TestTime::testRFC822(-4) Compared doubles are not the same (fuzzy compare)
   Actual   (actualTime)  : nan
   Expected (expectedTime): 4.66685e+08
   Loc: [/Users/ninjin/src/github.com/launchable/rocket-car-ctest/test/TestTypes/TestTime.cc(427)]
PASS   : TestTime::testRound(Millennium)
PASS   : TestTime::testRound(Century)
PASS   : TestTime::testRound(Decade)
PASS   : TestTime::testRound(Year)
PASS   : TestTime::testRound(Quarter)
PASS   : TestTime::testRound(Month)
PASS   : TestTime::testRound(WeekSunday)
PASS   : TestTime::testRound(WeekMonday)
PASS   : TestTime::testRound(Day)
PASS   : TestTime::testRound(Hour)
PASS   : TestTime::testRound(HalfHour)
PASS   : TestTime::testRound(QuarterHour)
PASS   : TestTime::testRound(Minute)
PASS   : TestTime::testRound(Second)
[NON-XML-CHAR-0x1B][38;5;201m# pid=40145  t=  1.0244s                   Time.c:656            Time_formatWithLocale_block()  macOS Locale: en_US[NON-XML-CHAR-0x1B][0m
[NON-XML-CHAR-0x1B][38;5;201m# pid=40145  t=  1.0246s                   Time.c:657            Time_formatWithLocale_block()      C Locale: en_US[NON-XML-CHAR-0x1B][0m
PASS   : TestTime::testFormat(datetime-sortable)
PASS   : TestTime::testFormat(datetime-short-12)
PASS   : TestTime::testFormat(datetime-short-24)
PASS   : TestTime::testFormat(datetime-medium-12)
PASS   : TestTime::testFormat(datetime-medium-24)
PASS   : TestTime::testFormat(datetime-long-12)
PASS   : TestTime::testFormat(datetime-long-24)
PASS   : TestTime::testFormat(date-short)
PASS   : TestTime::testFormat(date-medium)
PASS   : TestTime::testFormat(date-long)
PASS   : TestTime::testFormat(time-12)
PASS   : TestTime::testFormat(time-24)
PASS   : TestTime::cleanupTestCase()
Totals: 123 passed, 2 failed, 0 skipped, 0 blacklisted, 1021ms
********* Finished testing of TestTime *********
</system-out>
    </testcase>
  </testsuite>
</testsuites>
